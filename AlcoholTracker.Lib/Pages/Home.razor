@page "/"
@inject IHealthRepository healthRepository
@inject ISettingsRepository settingsRepository

<h1>Alcohol tracker</h1>

@if (sessionStarted == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <span>Custom date/time: </span><InputCheckbox @bind-Value=customDateTime />
    <br/>
    if (customDateTime)
    {
        <InputDate @bind-Value="@selectedDate" />
        <InputDate Type="InputDateType.Time" @bind-Value="@selectedTime" />
        <br />
    }

    if (sessionStarted == false)
    {
        <button class="btn btn-primary" @onclick="StartSession">Start session</button>
        <span>Sober in </span>
        <InputNumber @bind-Value=soberIn /> <span> hours</span>
    }
    else if (sessionStarted == true)
    {
        <button class="btn btn-primary" @onclick="Drink">Drink</button>
        <br/>
        <span>Meal:</span>
        <EnumActions TItem="MealSize" Action="Meal" />
        <br/>
        <span>Feeling:</span>
        <EnumActions TItem="FeelingType" Action="Feeling" />
        <br/>
        <button class="btn btn-primary" @onclick="StopSession">Stop session</button>

        if (sessionStart != null)
        {
            <SessionDetails Start=sessionStart.Value />
            <Advice Start=sessionStart.Value SoberIn=soberIn />
        }
    }
}

@code {
    bool? sessionStarted;
    bool customDateTime = false;
    DateTime? sessionStart;
    DateOnly selectedDate = DateOnly.FromDateTime(DateTime.Today);
    TimeOnly selectedTime = TimeOnly.FromDateTime(DateTime.Now);
    DateTime selectedDateTime => customDateTime ? selectedDate.ToDateTime(selectedTime, DateTimeKind.Local) : DateTime.Now;
    int soberIn = 12;

    protected override Task OnInitializedAsync()
    {
        sessionStarted = settingsRepository.Get("SessionStarted", false);

        if (sessionStarted == true)
        {
            sessionStart = settingsRepository.Get("SessionStart", DateTime.Now);
            soberIn = settingsRepository.Get("SessionSoberIn", 12);
        }

        return Task.CompletedTask;
    }

    void StartSession()
    {
        sessionStarted = true;
        sessionStart = selectedDateTime;
        settingsRepository.Set("SessionStarted", sessionStarted ?? true);
        settingsRepository.Set("SessionStart", sessionStart.Value);
        settingsRepository.Set("SessionSoberIn", soberIn);
    }

    Task StopSession()
    {
        sessionStarted = false;
        settingsRepository.Set("SessionStarted", sessionStarted ?? false);
        var sessionStart = settingsRepository.Get("SessionStart", DateTime.Now);
        var sessionEnd = selectedDateTime;

        return healthRepository.StoreSession(sessionStart, sessionEnd);
    }

    Task Drink()
    {
        return healthRepository.StoreDrink(selectedDateTime);
    }

    void Feeling(FeelingType feelingType)
    {

    }

    void Meal(MealSize mealSize)
    {

    }
}